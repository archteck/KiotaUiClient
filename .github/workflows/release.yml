name: Build and Release Avalonia App

on:
  push:
    tags:
      - 'v*' # e.g. v1.0.0
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # or whatever version you're targeting

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet publish src/KiotaUiClient/KiotaUiClient.csproj -c Release -o publish --self-contained true -p:PublishSingleFile=true -r ${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }}
  
      - name: Publish Updater (Windows)
        if: matrix.os == 'windows-latest'
        run: dotnet publish src/KiotaUIUpdater/KiotaUIUpdater.csproj -c Release -o publish --self-contained true -p:PublishSingleFile=true -r win-x64

      - name: Publish Updater (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: dotnet publish src/KiotaUIUpdater/KiotaUIUpdater.csproj -c Release -o publish --self-contained true -p:PublishSingleFile=true -r linux-x64

      - name: Publish Updater (macOS)
        if: matrix.os == 'macos-latest'
        run: dotnet publish src/KiotaUIUpdater/KiotaUIUpdater.csproj -c Release -o publish --self-contained true -p:PublishSingleFile=true -r osx-x64
  
      # 🗜️ Archive build on Windows
      - name: Archive build (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path publish\* -DestinationPath KiotaUiClient-win-x64.zip
        shell: pwsh
      
      # 🗜️ Archive build on Linux/macOS
      - name: Archive build (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd publish
          zip -r ../KiotaUiClient-${{ matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }}.zip .
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: KiotaUiClient-${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }}
          path: KiotaUiClient-${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'archteck/KiotaUiClient' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./artifacts/**/*.zip
